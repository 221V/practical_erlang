* курс по Erlang

** 8й день
   - eunit
     exceptions, generators, mock
     samples: erma, herd

   - common test
     one node, two nodes rpc, black box http
     groups, parallel, race conditions, dead locks

   - типы данных, диалайзер
     build_plt, add_plt
     warn_missing_spec
     игнорирование предупреждений лагера

* TODO theory, quiz

** TODO 9. gen_server
   Пишем свою реализацию gen_server в несколько этапов

** TODO 10. link, monitor
  здесь нужно показать примеры link и monitor
  можно на базе уже написанного gen_server
  запустить 2 таких процесса, слинковать, поставить trap_exit=true
  один останавливать, в другом ловить сообщения
  тож самое с monitor
   link, spawn_link, monitor, exit, trap exit

** TODO 11. supervisor

** TODO 12. OTP фреймворк
   Стоит разбить на две темы (поправить номера уроков в README и в именах каталогов):
   - application, gen_fsm, gen_event
     ebin/some.app, application
     gen_fsm, gen_event пару слов про них
   - erl-proj-tpl, структура проекта
     объяснить каждую папку и файл
     запуск
     конфигурация, логирование, lager
     rebar, rebar config
   - short_link как пример проекта
     cowboy из short_link стоит убрать, наверное

** TODO 13. Обработка ошибок на разных уровнях
   Defensive Programming vs Let it crash
   - let it crush
   - try..catch
     - нужна обработка отличная от дефолтной
     - более понятные сообщения в логах + контекст
     - способ выйти из функции в нескольких местах
   - supervisor
   - cluster

** TODO 14. Cowboy
   deps
   routing, start,
   not_found or ping_ handler
   http_handler
   work with Req object

** TODO 15. JSON
   jiffy, ej, jessy

** TODO 16. eunit
     exceptions, generators, mock
     samples: erma, herd

** TODO 17. common test
     one node, two nodes rpc, black box http
     groups, parallel, race conditions, dead locks

** TODO 18. types, dialyzer
     build_plt, add_plt
     warn_missing_spec
     игнорирование предупреждений лагера

* TODO пересмотреть все материалы erlang-school
  что-то еще забрать сюда
  dchat

* TODO exercises

** TODO 8. Многопоточность в Erlang.
  map-reduce
  форкнуть процессы, пусть что-то прочитают из файла, пошлют процессору-reduce
  тот пусть дождется всех результатов и что-нибудь просуммирует

** TODO 9. gen_server

** TODO 10. link, monitor

** TODO 11. supervisor

** TODO 12. OTP фреймворк

** TODO 13. Обработка ошибок на разных уровнях

** TODO 14. Cowboy

** TODO 15. JSON

** TODO 16. eunit

** TODO 17. common test

** TODO 18. types, dialyzer

* TODO video

** TODO 7. io_list, binary, string, unicode

** TODO 8. Многопоточность в Erlang.

** TODO 9. gen_server

** TODO 10. link, monitor

** TODO 11. supervisor

** TODO 12. OTP фреймворк

** TODO 13. Обработка ошибок на разных уровнях

** TODO 14. Cowboy

** TODO 15. JSON

** TODO 16. eunit

** TODO 17. common test

** TODO 18. types, dialyzer

* TODO курсовая работа
  консольная 2048 http://habrahabr.ru/post/261801/
  важно как-то это уметь тестировать

* TODO Когда курс будет закончен, вывести из sanbox на hexlet
  Дать ссылку на github/yzh44yzh/practial_erlang в своем блоге и своих аккаунтах (гуглоплюс, фейсбукс и т.д.)

* Дополнительные темы
** история эрланг на фоне истории программирования
** Работа с сокетами
   TCP, UDP
   Активный и пассивный режим сокета
   Наивный tcp сервер
   Два вида протоколов: бинарные с размером впереди, текстовые с разделителем
   опробовать оба через telnet
   Ranch Acceptor Pool
** Работа с базой данных
   epgsql, emysql
** Rebar
   управление зависимостями
   сборка проекта
   rebar 3,
   Makefile, EMakefile
** cowboy, сессии
** cowboy, websocket, bullet
** wgnet: sheep, herd, wg_push, erma
** tracing
** Релизы, relx
** кластер, dchat
** Валидация данных
   many inner case..of
   try..catch
   json scheme
   maybe/error monads
   list of validation functions, return: ok | {error, term()} | {stop, term()}
   get-данные можно перегнать в JSON и валидировать по схеме.
   Схема не годится там, где валидация с побочными эффектами: обращение к базе, к стороннему сервису и т.д.


* По каждому уроку:
- источники инфы:
  - notes.org
  - erlang-school
  - официальные доки
  - Армстронг
  - Цезарини
  - Хеберт
  - erlang in anger
  - OTP in action
  - yzh44yzh.by
- теория
- конспект
- quiz
- практическое задание
- видео

* Инфа

https://github.com/yzh44yzh/practical_erlang/

https://ru.hexlet.io/courses/erlang_101

Дока:
https://github.com/Hexlet/docs/blob/master/create-lesson.md

Dockerfile для установки Erlang, Rebar, Relx
https://registry.hub.docker.com/u/correl/erlang/dockerfile/
