* TODO ошибки
ex 11.
> в этом задании тест проверяет, что при парсинге файла должны возникать ошибки конкретных типов
Ну это я неправильно сделал, надо бы принимать любые ошибки. Поправлю тест

вопросы к какому-то уроку. К первому, что ли ...
«выполонять»
со значениями типа атом можно выполнять операции

вообще я не проверял спелчеком вопросы, надо бы проверить все



* TODO exercise 12. supervisor
дерево:
- sup1
  - sup2 -- статический
    - wok1
    - wok2
  - sup3 -- динамический запуск и остановка детей
    - wok3

wok1,2,3 ничего особенного не делают, просто отвечают на ping, кто они такие
(модуль такой-то, пид такой-то)

тестом проверить, что дерево развернулось правильно
динамически создавать и удалять детей у sup3

можно протестировать к-во рестартов
превысить к-во крашей в еденицу времени, и убедиться, что sup3 рестартовал
а то можно обрушить и все дерево



* TODO exercise 13. application



* TODO exercise 14. OTP фреймворк
создать базовый проект из одного приложения, как у меня erl_proj_tpl
app-sup-worker и т.д.

в начале один только Makefile, который умеет собирать и запускать ноду

тест должен проверить, что все собирается, запускается,
к ноде можно подключиться, выполнить which_applications
и worker отвечает на пинг инфой
еще можно проверить дерево супервизоров




* TODO exercise 15. Обработка ошибок на разных уровнях


* TODO exercise 16. TCP и UDP сокеты
  telnet-клиент
  tcp-сервер в пассивном режиме с текстовым протоколом
  бродкаст на всех клиентов


* TODO курсовая работа
  консольная 2048 http://habrahabr.ru/post/261801/
  telnet-client, TCP-socket, ranch
  Может быть какой-то многопользовательский вариант игры.
  Или что-то из Codewars.

  игра в города между двумя пользователями
  сервер передает инфу между ними, и сделит за правилами:
  - новый город начинается с той буквы, на которую закончился старый
  - города не повторяются
  нужно придумать какой-то простой текстовый протокол
  и придумать, как соединять пользователей в пары


* TODO video

** TODO 7. io_list, binary, string, unicode

** TODO 8. Многопоточность в Erlang.

** TODO 9. gen_server

** TODO 10. gen_server, продолжение

** TODO 11. link, monitor

** TODO 12. supervisor

** TODO 13. application

** TODO 14. OTP фреймворк

** TODO 15. Обработка ошибок на разных уровнях

** TODO 16. TCP и UDP сокеты


* TODO Когда курс будет закончен, вывести из sanbox на hexlet
  Дать ссылку на github/yzh44yzh/practial_erlang в своем блоге и своих аккаунтах (гуглоплюс, фейсбукс и т.д.)


* Инфа

https://github.com/yzh44yzh/practical_erlang/

https://ru.hexlet.io/courses/erlang_101

Дока:
https://github.com/Hexlet/docs/blob/master/create-lesson.md

Dockerfile для установки Erlang, Rebar, Relx
https://registry.hub.docker.com/u/correl/erlang/dockerfile/


* урок по валидации входящих данных
вложенные case
исключения
схемы
erlmonads
и то, как я сделал для отписок в NC

* урок по raft
