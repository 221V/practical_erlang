* курс по Erlang

** 6й день
   распечатать, что я успел написать
   работать будем на базе erl-proj-tpl
   - 11 supervisor, gen_fsm, gen_even
   - 12 application, структура проекта, rebar

** 7й день
   - 13 Обработка ошибок
     см TODO в конспекте

   - cowboy, роутинг, статика, хендлеры
   - работа с JSON

** 8й день
   - eunit, common test
   - cowboy, web socket
   - конфигурирование, логирование
   - типы данных, диалайзер


* TODO 7й урок io_list, binary, string, unicode
- видео
- залить и прицепить к уроку на hexlet


* TODO 8й урок. Многопоточность в Erlang.
- практическое задание
  map-reduce
  форкнуть процессы, пусть что-то прочитают из файла, пошлют процессору-reduce
  тот пусть дождется всех результатов и что-нибудь просуммирует

- видео


* TODO 9. gen_server
- теория
- конспект
- quiz
- практическое задание
- видео


* TODO 10. Многопоточность, обработка ошибок
- теория
- конспект
- quiz
- практическое задание
- видео

  здесь нужно показать примеры link и monitor
  можно на базе уже написанного gen_server
  запустить 2 таких процесса, слинковать, поставить trap_exit=true
  один останавливать, в другом ловить сообщения
  тож самое с monitor


* TODO 11. supervisor
- теория
- конспект
- quiz
- практическое задание
- видео


* TODO 12 OTP фреймворк
- теория
- конспект
- quiz
- практическое задание
- видео


* TODO 13. Обработка ошибок на разных уровнях
- теория
- конспект
- quiz
- практическое задание
- видео

* TODO пересмотреть все материалы erlang-school
  что-то еще забрать сюда

* TODO добавить темы cowboy, JSON, rebar
  вряд ли у меня будет 2-я часть. А если будет, то не скоро.
  поэтому нужно больше тем взять в 1-ю часть.

* TODO курсовая работа по 1й части курса
  важно как-то это уметь тестировать
  веб-сервер пока не изучали, на UI расчитывать не приходится
  так что это должно быть что-то консольное
  консольная игра

можно взять тему TCP сокетов, телнет клиент, текстовый протокол
и на всем этом построить более сложное задание, чем обычно

тестировать его будет трудно. Придется сделать TCP-клиента, повторяющего telnet

* TODO Когда курс будет закончен, вывести из sanbox на hexlet
  Дать ссылку на github/yzh44yzh/practial_erlang в своем блоге и своих аккаунтах (гуглоплюс, фейсбукс и т.д.)


* По каждому уроку:

- источники инфы:
  - notes.org
  - erlang-school
  - официальные доки
  - Армстронг
  - Цезарини
  - Хеберт
  - erlang in anger
  - OTP in action
  - yzh44yzh.by

- теория
- конспект
- quiz
- практическое задание
- видео


* Инфа

https://github.com/yzh44yzh/practical_erlang/

https://ru.hexlet.io/courses/erlang_101

Дока:
https://github.com/Hexlet/docs/blob/master/create-lesson.md

Dockerfile для установки Erlang, Rebar, Relx
https://registry.hub.docker.com/u/correl/erlang/dockerfile/
